% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rgcca_predict.R
\name{rgcca_predict}
\alias{rgcca_predict}
\title{Predict RGCCA}
\usage{
rgcca_predict(rgcca_res, blocks_test, response, prediction_model = "lm", ...)
}
\arguments{
\item{rgcca_res}{A fitted RGCCA object (see  \code{\link[RGCCA]{rgcca}}).}

\item{blocks_test}{A list of either dataframes or matrices to be projected.}

\item{response}{A character or integer giving the block to predict
(must be the same name among train and test set).}

\item{prediction_model}{A character giving the function used to compare the
trained and the tested models.}

\item{...}{Additional parameters to be passed to the model fitted on top
of RGCCA.}
}
\description{
Predict a new block from a RGCCA
}
\examples{
data("Russett")
blocks <- list(
  agriculture = Russett[, 1:3],
  industry = Russett[, 4:5],
  politic = Russett[, 6:11]
)
C <- connection <- matrix(
  c(
    0, 0, 1,
    0, 0, 1,
    1, 1, 0
  ),
  3, 3
)
object1 <- rgcca(blocks,
  connection = C, tau = c(0.7, 0.8, 0.7),
  ncomp = c(3, 2, 4), superblock = FALSE, response = 3
)
A <- lapply(object1$call$blocks, function(x) x[1:32, ])
object <- rgcca(A,
  connection = C, tau = c(0.7, 0.8, 0.7),
  ncomp = c(3, 2, 4),
  scale = FALSE, scale_block = FALSE,
  superblock = FALSE, response = 3
)
X <- lapply(object1$call$blocks, function(x) x[-c(1:32), ])
X <- lapply(X, function(x) x[, sample(1:NCOL(x))])
X <- sample(X, length(X))
response <- "industry"
y_train <- kmeans(A[[response]], 3)$cluster
y_test <- kmeans(X[[response]], 3)$cluster
res <- rgcca_predict(object, X, response = "industry")
}
