% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rgcca_stability.R
\name{rgcca_stability}
\alias{rgcca_stability}
\title{Stability selection for SGCCA}
\usage{
rgcca_stability(
  rgcca_res,
  keep = sapply(rgcca_res$a, function(x) mean(x != 0)),
  n_boot = 100,
  n_cores = parallel::detectCores() - 1
)
}
\arguments{
\item{rgcca_res}{A fitted RGCCA object (see \code{\link[RGCCA]{rgcca}})}

\item{keep}{numeric vector indicating the proportion of top variables per
block.}

\item{n_boot}{Number of bootstrap samples (Default: 100).}

\item{n_cores}{Number of cores for parallelization.}
}
\value{
\item{top}{indicator on which variables are ranked.}

\item{keepVar}{indices of the top variables.}

\item{bootstrap}{block-weight vectors for ech bootstrap sample.}

\item{rgcca_res}{an RGCCA object fitted on the most stable variables.}
}
\description{
This function can be used to identify the most stable variables
identified as relevant by SGCCA.
}
\examples{
\dontrun{
###########################
# stability and bootstrap #
###########################

require(gliomaData)
data(ge_cgh_locIGR)
blocks <- ge_cgh_locIGR$multiblocks
Loc <- factor(ge_cgh_locIGR$y)
levels(Loc) <- colnames(ge_cgh_locIGR$multiblocks$y)
connection <-  matrix(c(0, 0, 1, 0, 0, 1, 1, 1, 0), 3, 3)
blocks[[3]] = blocks[[3]][, -3]

fit.sgcca = rgcca(blocks, connection = connection,
                  sparsity = c(.071,.2, 1),
                  ncomp = c(1, 1, 1),
                  scheme = "centroid",
                  verbose = TRUE)

fit.stab = rgcca_stability(fit.sgcca,
                           keep = sapply(fit.sgcca$a, function(x) mean(x!=0)),
                           n_cores = 15
                           )

boot.out = bootstrap(fit.stab, n_boot = 100, n_cores = 1)
}
}
