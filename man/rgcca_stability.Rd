% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rgcca_stability.R
\name{rgcca_stability}
\alias{rgcca_stability}
\title{Stability selection for SGCCA}
\usage{
rgcca_stability(
  rgcca_res,
  keep = vapply(rgcca_res$a, function(x) mean(x != 0), FUN.VALUE = 1),
  n_boot = 100,
  n_cores = 1,
  verbose = TRUE,
  balanced = TRUE,
  keep_all_variables = FALSE
)
}
\arguments{
\item{rgcca_res}{A fitted RGCCA object (see \code{\link[RGCCA]{rgcca}})}

\item{keep}{numeric vector indicating the proportion of top variables per
block.}

\item{n_boot}{Number of bootstrap samples (Default: 100).}

\item{n_cores}{Number of cores for parallelization.}

\item{verbose}{Logical value indicating if the progress of the procedure
is reported.}

\item{balanced}{A boolean indicating if a balanced bootstrap procedure is
performed or not (default is TRUE).}

\item{keep_all_variables}{A boolean indicating if all variables have to be
kept even when some of them have null variance for at least one bootstrap
sample (default is FALSE).}
}
\value{
\item{top}{indicator on which variables are ranked.}

\item{keepVar}{indices of the top variables.}

\item{bootstrap}{block-weight vectors for ech bootstrap sample.}

\item{rgcca_res}{an RGCCA object fitted on the most stable
variables.}
}
\description{
This function can be used to identify the most stable variables
identified as relevant by SGCCA. A Variable Importance in the Projection
(VIP) based criterion is used to identify the most stable variables.
}
\examples{
\dontrun{
###########################
# stability and bootstrap #
###########################

data("ge_cgh_locIGR", package = "gliomaData")
blocks <- ge_cgh_locIGR$multiblocks
Loc <- factor(ge_cgh_locIGR$y)
levels(Loc) <- colnames(ge_cgh_locIGR$multiblocks$y)
blocks[[3]] <- Loc


fit.sgcca <- rgcca(blocks,
  sparsity = c(.071, .2, 1),
  ncomp = c(1, 1, 1),
  scheme = "centroid",
  verbose = TRUE, response = 3
)

boot.out <- rgcca_bootstrap(fit.sgcca, n_boot = 100, n_cores = 1)

fit.stab <- rgcca_stability(fit.sgcca,
  keep = sapply(fit.sgcca$a, function(x) mean(x != 0)),
  n_cores = 1, n_boot = 10,
  verbose = TRUE
)

boot.out <- rgcca_bootstrap(
  fit.stab, n_boot = 500, n_cores = 1, verbose = FALSE
)
}
}
