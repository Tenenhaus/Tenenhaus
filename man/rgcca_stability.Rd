% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rgcca_stability.R
\name{rgcca_stability}
\alias{rgcca_stability}
\title{Stability selection for SGCCA}
\usage{
rgcca_stability(
  rgcca_res,
  keep = vapply(rgcca_res$a, function(x) mean(x != 0), FUN.VALUE = 1),
  n_boot = 100,
  n_cores = 1,
  verbose = FALSE,
  balanced = TRUE,
  keep_all_variables = FALSE
)
}
\arguments{
\item{rgcca_res}{A fitted RGCCA object (see \code{\link[RGCCA]{rgcca}})}

\item{keep}{numeric vector indicating the proportion of top variables per
block.}

\item{n_boot}{Number of bootstrap samples (Default: 100).}

\item{n_cores}{Number of cores for parallelization.}

\item{verbose}{Logical value indicating if the progress of the procedure
is reported.}

\item{balanced}{A boolean indicating if a balanced bootstrap procedure is
performed or not (default is TRUE).}

\item{keep_all_variables}{A boolean indicating if all variables have to be
kept even when some of them have null variance for at least one bootstrap
sample (default is FALSE).}
}
\value{
\item{top}{indicator on which variables are ranked.}

\item{keepVar}{indices of the top variables.}

\item{bootstrap}{block-weight vectors for ech bootstrap sample.}

\item{rgcca_res}{an RGCCA object fitted on the most stable
variables.}
}
\description{
This function can be used to identify the most stable variables
identified as relevant by SGCCA. The Variable Importance in the Projection
(VIP) criterion is used to identify the most stable variables.
}
\examples{
\dontrun{
###########################
# stability and bootstrap #
###########################

require(gliomaData)
data(ge_cgh_locIGR)
blocks <- ge_cgh_locIGR$multiblocks
Loc <- factor(ge_cgh_locIGR$y)
levels(Loc) <- colnames(ge_cgh_locIGR$multiblocks$y)
connection <- matrix(c(0, 0, 1, 0, 0, 1, 1, 1, 0), 3, 3)
blocks[[3]] <- blocks[[3]][, -3]

fit.sgcca <- rgcca(blocks,
  connection = connection,
  sparsity = c(.071, .2, 1),
  ncomp = c(1, 1, 1),
  scheme = "centroid",
  verbose = TRUE
)

boot.out <- bootstrap(fit.sgcca, n_boot = 100, n_cores = 1, verbose = TRUE)

fit.stab <- rgcca_stability(fit.sgcca,
  keep = sapply(fit.sgcca$a, function(x) mean(x != 0)),
  n_cores = 15,
  verbose = TRUE
)

boot.out <- bootstrap(fit.stab, n_boot = 500, n_cores = 1, verbose = FALSE)
}
}
